.card-view {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;

	overflow: hidden;
	margin: $card-border;
}

.card > .card-view > img {
	display: block;
	position: absolute;
	width: 100%;
	height: 100%;
}

.loading {
	visibility: hidden;
}

@mixin clip-borders ($img-width, $img-height, $top, $right, $bottom, $left) {
	// todo: simlify calculation
	// calculate clip in mm
	$top: ($top / $img-height) * $card-view-height;
	$right: ($right / $img-width) * $card-view-width;
	$bottom: ($bottom / $img-height) * $card-view-height;
	$left: ($left / $img-width) * $card-view-width;

	left: -($left / $card-view-width) * 100%;
	top: -($top / $card-view-height) * 100%;
	width: ($card-view-width / ($card-view-width - $left - $right)) * 100%;
	height: ($card-view-height / ($card-view-height - $top - $bottom)) * 100%;
}

.card img.clip-border-1 { // 480x680 hq scans
	@include clip-borders(480px, 680px, 10px, 10px, 10px, 10px);
}
.card img.clip-border-2 { // 223x310 lq gatherer
	@include clip-borders(223px, 310px, 12px, 12px, 13px, 11px);
}


.card {
	max-width: $card-width;
	max-height: $card-height;

	position: relative;
	overflow: hidden;

	background-color: #000;
	color: #fff;
	margin: 3px;
	border-radius: $card-border-radius-width / $card-border-radius-height;

	.card-data {
		position: absolute;
		width: 100%;
		height: 100%;
	}
}

/* Animation stuff */
.card-view {
	&, > img {
		perspective: 1000px;
		transition: transform 400ms cubic-bezier(0.215, 0.61, 0.355, 1);
	}

	// flip cards
	&.flipped {
		transform: rotate(-180deg);
	}

	// split cards
	&.split-1 { transform: rotate(90deg) scale(1 / $card-ratio)	translate(0, -25%); }
	&.split-2 { transform: rotate(90deg) scale(1 / $card-ratio)	translate(0,  25%); }

	// double-faced cards
	&.turned > img.front, &:not(.turned) > img.back {
		backface-visibility: hidden;
		z-index: 1; // fix ordering issue
		&.front { transform: rotateY(-180deg) }
		&.back  { transform: rotateY( 180deg) }
	}
}
